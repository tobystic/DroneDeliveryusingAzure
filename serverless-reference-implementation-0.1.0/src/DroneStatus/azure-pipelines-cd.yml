steps:
- task: AzureCLI@1
  displayName: 'Azure CLI - Create Resource Group'
  condition: eq(variables['DeployAzureResources'], true)
  inputs:
    azureSubscription: $(ServiceConnectionName)

    scriptLocation: inlineScript

    inlineScript: 'az group create -n $(ResourceGroup) -l $(Location)'

- task: AzureCLI@1
  displayName: 'Azure CLI - Deploy Function App and resources'
  condition: eq(variables['DeployAzureResources'], true)
  inputs:
    azureSubscription: $(ServiceConnectionName)

    scriptLocation: inlineScript

    inlineScript: 'az group deployment create -g $(ResourceGroup) --template-file ./src/DroneStatus/azuredeploy-slots.json --parameters appName="$(AppName)"'

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Artifacts'
  inputs:
    artifactName: drop

- task: AzureRmWebAppDeployment@4
  displayName: 'Azure App Service Deploy: $(AppName)'
  inputs:
    azureSubscription: $(ServiceConnectionName)

    appType: functionApp

    WebAppName: $(AppName)-ds-funcapp

    packageForLinux: '$(System.ArtifactsDirectory)/drop/DroneStatusFunctionApp.zip'

    enableCustomDeployment: true

    DeploymentType: runFromZip

    deployToSlotOrASE: true

    slotName: $(SlotName)

    resourceGroupName: $(ResourceGroup)
